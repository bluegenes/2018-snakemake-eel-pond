from os.path import join

rule salmon_index:
    """
    Index the transcriptome for salmon quantification
    """
    input:
        join(ASSEMBLY_DIR, "{assembly}.fasta")
    output:
        join(QUANT_DIR, "{assembly}_salmon")
    message:
        """--- Indexing the transcriptome with Salmon ---"""
    threads: 2
    params:
        extra = '' 
    log:
        qual_log = join(LOGS_DIR, 'salmon/{assembly}_index.log')
    wrapper:
        '0.25.0/bio/salmon/index'

rule salmon_quant_reads_pe:
    """
    Quantify transcripts with Salmon
    """
    input:
        r1 = rules.trimmomatic_pe.output.r1,
        r2 = rules.trimmomatic_pe.output.r2,
        index = join(QUANT_DIR, "{assembly}_salmon")
    output:
        quant = join(QUANT_DIR, "{sample}_{unit}_x_{assembly}","quant.sf"),
        lib = join(QUANT_DIR, "{sample}_{unit}_x_{assembly}","lib_format_counts.json")
    message:
        """--- Quantifying transcripts with Salmon ---"""
    params:
        libtype= 'IU',
        extra = '' 
    threads: 2
    log:
        qual_log = join(LOGS_DIR, 'salmon/{sample}_{unit}_x_{assembly}.log')
    wrapper:
        '0.25.0/bio/salmon/quant/quant-reads'

rule salmon_quant_reads_se:
    """
    Quantify transcripts with Salmon
    """
    input:
        r = rules.trimmomatic_se.output.r1, 
        index = join(QUANT_DIR, "{assembly}_salmon")
    output:
        quant = join(QUANT_DIR, "{sample}_{unit}_x_{assembly}","quant.sf"),
        lib = join(QUANT_DIR, "{sample}_{unit}_x_{assembly}","lib_format_counts.json")
    message:
        """--- Quantifying transcripts with Salmon ---"""
    params:
        extra = ''
    threads: 2
    log:
        qual_log = join(LOGS_DIR, 'salmon/{sample}_{unit}_x_{assembly}.log')
    wrapper:
        '0.25.0/bio/salmon/quant/quant-reads'
