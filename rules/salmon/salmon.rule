from os.path import join

# use if you don't want to collapse technical replicates ("units" column; deseq2 not supported)
def get_trimmed(wildcards):
    readsD = {}
    if not is_single_end(**wildcards):
        readsD['r1'] = expand(join(TRIM_DIR, '{sample}_{unit}_1.trim.fq.gz'),**wildcards)
        readsD['r2'] = expand(join(TRIM_DIR, '{sample}_{unit}_2.trim.fq.gz'),**wildcards)
        return readsD
    readsD['r'] = expand(join(TRIM_DIR, '{sample}_{unit}_se.trim.fq.gz'),**wildcards)
    return readsD

# use these to collapse technical replicates
def get_trimmed_combined_pe(wildcards):
    readsD = {}
    pe_only = units[units['fq2'].notnull()]
    readsD['r1'] = expand(join(TRIM_DIR, "{unit.sample}_{unit.unit}_1.trim.fq.gz"), unit=pe_only.itertuples())
    readsD['r2'] = expand(join(TRIM_DIR, "{unit.sample}_{unit.unit}_2.trim.fq.gz"), unit=pe_only.itertuples())
    return readsD

def get_trimmed_combined_se(wildcards):
    readsD = {}
    se_only = units[units['fq2'].isnull()]
    readsD['r'] = expand(join(TRIM_DIR, "{unit.sample}_{unit.unit}_se.trim.fq.gz"), unit=se_only.itertuples())
    return readsD

rule salmon_index:
    """
    Index the transcriptome for salmon quantification
    """
    input:
        join(ASSEMBLY_DIR, base + ".fasta")
    output:
        join(QUANT_DIR, base + "_salmon")
    message:
        """--- Indexing the transcriptome with Salmon ---"""
    threads: 2
    params:
        extra = ''
    log:
        qual_log = join(LOGS_DIR, 'salmon/' + base +'_index.log')
    wrapper:
        '0.25.0/bio/salmon/index'

rule salmon_quant_reads_pe:
    """
    Quantify transcripts with Salmon
    """
    input: 
        unpack(get_trimmed_combined_pe),
        index = join(QUANT_DIR, base + "_salmon")
    output:
        quant = join(QUANT_DIR, "{sample}_pe_x_" + base,"quant.sf"),
        lib = join(QUANT_DIR, "{sample}_pe_x_" + base,"lib_format_counts.json")
    message:
        """--- Quantifying transcripts with Salmon ---"""
    params:
        libtype= 'A', # maybe set in config file 
        extra = '' 
    threads: 2
    log:
        qual_log = join(LOGS_DIR, 'salmon/{sample}_pe_x_' + base + '.log')
    wrapper:
        '0.25.0/bio/salmon/quant/quant-reads'

rule salmon_quant_reads_se:
    """
    Quantify transcripts with Salmon
    """
    input: 
        unpack(get_trimmed_combined_se),
        index = join(QUANT_DIR, base + "_salmon")
    output:
        quant = join(QUANT_DIR, "{sample}_se_x_" + base,"quant.sf"),
        lib = join(QUANT_DIR, "{sample}_se_x_" + base,"lib_format_counts.json")
    message:
        """--- Quantifying transcripts with Salmon ---"""
    params:
        libtype= 'A', 
        extra = '' 
    threads: 2
    log:
        qual_log = join(LOGS_DIR, 'salmon/{sample}_se_x_' + base + '.log')
    wrapper:
        '0.25.0/bio/salmon/quant/quant-reads'

